---
- name: rollback de configuracion CREAR_MPLS_ESC
  hosts: all
  gather_facts: no
  
  vars:
    vrf_name: ""
    site: ""
    equipos_config:
      AMU-P5-E4-UR29-BLEAF-A:
        bgp_asn: "65021"
        id_po: "Port-Channel5."
      AMU-P5-E3-UR29-BLEAF-B:
        bgp_asn: "65021"
        id_po: "Port-Channel6."
      CDLV-212-G31-UR29-BLEAF-A:
        bgp_asn: "65121"
        id_po: "Port-Channel5."
      CDLV-212-G32-UR29-BLEAF-B:
        bgp_asn: "65121"
        id_po: "Port-Channel6."
  
  tasks:
    - name: Verificar existencia de la VRF
      arista.eos.eos_command:
        commands:
          - show vrf | include {{ vrf_name }}
      register: vrf_check

    - name: Debug VRF check
      debug:
        var: vrf_check.stdout

    - name: Ejecutar el comando para obtener la información de la VRF
      arista.eos.eos_command:
        commands:
          - show ip route vrf {{ vrf_name }} connected
      register: vrf_output

    - name: Extraer la VLAN ID
      set_fact:
        vlan_id: "{{ (vrf_output.stdout[0] | regex_search('Vlan(\\d+)', '\\1')) | first }}"
      when:
        - vrf_output.stdout is not none
        - site in ['CDLV', 'AMU'] 
        - inventory_hostname in ['CDLV-212-G31-UR29-BLEAF-A', 'CDLV-212-G32-UR29-BLEAF-B', 'AMU-P5-E4-UR29-BLEAF-A', 'AMU-P5-E3-UR29-BLEAF-B']

    - name: Extraer el Port-Channel
      set_fact:
        port_channel: "{{ (vrf_output.stdout[0] | regex_search('Port-Channel\\d+\\.?(\\d+)?', '\\1')) | first }}"
      when:
        - site in ['CDLV', 'AMU'] 
        - inventory_hostname in ['CDLV-212-G31-UR29-BLEAF-A', 'CDLV-212-G32-UR29-BLEAF-B', 'AMU-P5-E4-UR29-BLEAF-A', 'AMU-P5-E3-UR29-BLEAF-B']

    - name: Mostrar los valores extraídos
      debug:
        msg: 
           - "VLAN ID: {{ vlan_id }}"
           - "Port-Channel: {{ port_channel }}"
      when:
        - site in ['CDLV', 'AMU']
        - inventory_hostname in ['CDLV-212-G31-UR29-BLEAF-A', 'CDLV-212-G32-UR29-BLEAF-B', 'AMU-P5-E4-UR29-BLEAF-A', 'AMU-P5-E3-UR29-BLEAF-B']

    - name: Verificar existencia de VRRP
      arista.eos.eos_command:
        commands:
          - show vrrp group 120 interface vlan {{ vlan_id }}
      register: vrrp_check

    - name: Debug VRRP check
      debug:
        var: vrrp_check.stdout

    - name: Extraer la IP VIP de VRRP
      set_fact:
        vrrp_ip: "{{ (vrrp_check.stdout[0] | regex_search('Virtual IPv4 address is (\\d+\\.\\d+\\.\\d+\\.\\d+)', '\\1')) | first }}"
      when: vrrp_check.stdout is not none and vrrp_check.stdout[0] != ''

    - name: Debug IP VIP de VRRP
      debug:
        var: vrrp_ip

    - name: Convertir la IP VIP VRRP a entero y sumar 1
      set_fact:
        vrrp_ip_int: "{{ (vrrp_ip | ansible.utils.ipaddr('int') + 1) | ansible.utils.ipaddr('ipv4') | regex_replace('/32$', '') }}"

    - name: Mostrar IP GW de TDS
      debug:
        msg: "La ip GW de TDS es {{ vrrp_ip_int }}"

    - name: Obtener la configuración completa de las rutas estáticas
      arista.eos.eos_command:
        commands: "show running-config | include {{ vrrp_ip_int }}"
      register: static_routes_output

    - name: Filtrar rutas estáticas con salto GW TDS
      set_fact:
        filtered_static_routes: "{{ static_routes_output.stdout[0].split('\n') | select('search', vrrp_ip_int) | list }}"

    - name: Eliminar rutas estáticas en {{ inventory_hostname }}
      arista.eos.eos_command:
        commands:
          - configure terminal
          - "no {{ item }}"
      loop: "{{ filtered_static_routes }}"
      when: 
        - filtered_static_routes is defined
        - site in ['CDLV', 'AMU']
        - inventory_hostname in ['CDLV-212-G31-UR29-BLEAF-A', 'CDLV-212-G32-UR29-BLEAF-B', 'AMU-P5-E4-UR29-BLEAF-A', 'AMU-P5-E3-UR29-BLEAF-B']
        - vrrp_check.stdout[0] != ''

    - name: Eliminar configuraciones relacionadas para {{ inventory_hostname }}
      arista.eos.eos_command:
        commands:
          - configure terminal
          - interface Port-Channel 12
          - switchport trunk allowed vlan remove {{ vlan_id }}
          - router bgp {{ equipos_config[inventory_hostname].bgp_asn }}
          - no vrf {{ vrf_name }}
          - no interface vlan {{ vlan_id }}
          - no interface {{ equipos_config[inventory_hostname].id_po }}{{ port_channel }}
          - no track {{ vrf_name }}TRACK interface {{ equipos_config[inventory_hostname].id_po }}{{ vlan_id }} line-protocol
          - no vlan {{ vlan_id }}
          - no vrf instance {{ vrf_name }}
      when: 
        - vrf_check.stdout[0] != ''
        - site in ['CDLV', 'AMU']
        - inventory_hostname in ['CDLV-212-G31-UR29-BLEAF-A', 'CDLV-212-G32-UR29-BLEAF-B', 'AMU-P5-E4-UR29-BLEAF-A', 'AMU-P5-E3-UR29-BLEAF-B']

    - name: Guardar cambios
      arista.eos.eos_command:
        commands:
          - write memory

    - name: Debug guardado de cambios
      debug:
        msg: "Cambios guardados en el dispositivo."
