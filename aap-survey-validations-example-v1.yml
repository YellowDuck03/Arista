---
- name: "[PLAY-1] [EXAMPLE SURVEY VALIDATION POC] Ejemplo de Validaciones - V1"
  hosts: localhost
  gather_facts: False

  vars:
    customer_1: ""
    customer_2: ""
    ticket_number: ""
    vlan_num: ""
    ip_ipv4: ""
    ip_ipv6: ""
    ip_any: ""
    bandwidth: ""
    
  pre_tasks:
    
  - ansible.builtin.assert:
      that:
        - customer_1 is defined
        - customer_1 != ""
      fail_msg: "VALIDATION ERROR for variable 'customer_1' -> UNDEFINED/BLANK VARIALBE"
      success_msg: "'VALIDATION [BASIC] SUCCESS for 'customer_1'"

  - ansible.builtin.assert:
      that:
        - customer_2 is defined
        - not customer_2 == ""
      fail_msg: "VALIDATION ERROR for variable 'customer_2' -> UNDEFINED/BLANK VARIALBE"
      success_msg: "'VALIDATION [BASIC] SUCCESS for 'customer_2'"

  - ansible.builtin.assert:
      that:
        - customer_1 | length >= 1
        - customer_1 | length <= 20
      fail_msg: "VALIDATION ERROR for variable 'customer_1' -> INVALID LENGHT"
      success_msg: "'VALIDATION [LENGHT] SUCCESS for 'customer_1'"
        
  - ansible.builtin.assert:
      that:
        - ticket_number is defined
        - ticket_number != ""
        - ticket_number | int
      fail_msg: "VALIDATION ERROR for variable 'ticket_number' -> UNDEFINED/BLANK VARIALBE"
      success_msg: "'VALIDATION [BASIC] SUCCESS for 'ticket_number'"

  - ansible.builtin.assert:
      that:
        - ticket_number | length >= 6
        - ticket_number | length <= 8
      fail_msg: "VALIDATION ERROR for variable 'ticket_number' -> INVALID LENGHT"
      success_msg: "'VALIDATION [LENGHT] SUCCESS for 'ticket_number'"
    
  - ansible.builtin.assert:
      that:
        - vlan_num is defined
        - vlan_num != ""
      fail_msg: "VALIDATION ERROR for variable 'vlan_num' -> UNDEFINED/BLANK VARIALBE"
      success_msg: "'VALIDATION [BASIC] SUCCESS for 'vlan_num'"
        
  - ansible.builtin.assert:
      that:
        - vlan_num | int >= 1
        - vlan_num | int <= 4094
      fail_msg: "VALIDATION ERROR for variable 'vlan_num' -> INVALID VLAN NUMBER"
      success_msg: "'VALIDATION [VALID INTEGER] SUCCESS for 'vlan_num'"
    
  - ansible.builtin.assert:
      that:
        - ip_ipv4 is defined
        - ip_ipv4 != ""
      fail_msg: "VALIDATION ERROR for variable 'ip_ipv4' -> UNDEFINED/BLANK VARIALBE"
      success_msg: "'VALIDATION [BASIC] SUCCESS for 'ip_ipv4'"
        
  - ansible.builtin.assert:
      that:
        - ip_ipv4 | ipv4
      fail_msg: "VALIDATION ERROR for variable 'ip_ipv4' -> NOT IPv4 ADDRESS"
      success_msg: "'VALIDATION [IPv4] SUCCESS for 'ip_ipv4'"

  - ansible.builtin.assert:
      that:
        - ip_ipv6 != "NOT_SET"
        - ip_ipv6 != ""
      fail_msg: "VALIDATION ERROR for variable 'ip_ipv6' -> UNDEFINED/BLANK VARIALBE"
      success_msg: "'VALIDATION [BASIC] SUCCESS for 'ip_ipv6'"
        
  - ansible.builtin.assert:
      that:
        - ip_ipv6 | ipv6
      fail_msg: "VALIDATION ERROR for variable 'ip_ipv6' -> NOT IPv6 ADDRESS"
      success_msg: "'VALIDATION [IPv6] SUCCESS for 'ip_ipv6'"

  - ansible.builtin.assert:
      that:
        - ip_any is defined
        - ip_any != ""
      fail_msg: "VALIDATION ERROR for variable 'ip_any' -> UNDEFINED/BLANK VARIALBE"
      success_msg: "'VALIDATION [BASIC] SUCCESS for 'ip_any'"
        
  - ansible.builtin.assert:
      that:
        - ip_any | ipaddr
      fail_msg: "VALIDATION ERROR for variable 'ip_any' -> NOT IPv4/IPv6 ADDRESS"
      success_msg: "'VALIDATION [IPv4/IPv6] SUCCESS for 'ip_any'"

  - ansible.builtin.assert:
      that:
        - bandwidth is defined
        - bandwidth != ""
      fail_msg: "VALIDATION ERROR for variable 'bandwidth' -> UNDEFINED/BLANK VARIALBE"
      success_msg: "'VALIDATION [BASIC] SUCCESS for 'bandwidth'"

  - ansible.builtin.assert:
      that:
        - bandwidth | regex_search("Mbps$", multiline=False, ignorecase=False)
      fail_msg: "VALIDATION ERROR for variable 'bandwidth' -> MISSING 'Mbps' SUBSTRING"
      success_msg: "'VALIDATION [REGEX Mbps] SUCCESS for 'bandwidth'"
        
  tasks:
  
  - ansible.builtin.debug:
      msg: "INFO: VARIABLE 'customer_1' -> '{{ customer_1 }}'"
  
  - ansible.builtin.debug:
      msg: "INFO: VARIABLE 'customer_2' -> '{{ customer_1 }}'"

  - ansible.builtin.debug:
      msg: "INFO: VARIABLE 'vlan_num' -> '{{ vlan_num }}'"

  - ansible.builtin.debug:
      msg: "INFO: VARIABLE 'ip_ipv4' -> '{{ ip_ipv4 }}'"

  - ansible.builtin.debug:
      msg: "INFO: VARIABLE 'ip_ipv6' -> '{{ ip_ipv6 }}'"

  - ansible.builtin.debug:
      msg: "INFO: VARIABLE 'ip_any' -> '{{ ip_any }}'"

  - ansible.builtin.debug:
      msg: "INFO: VARIABLE 'bandwidth' -> '{{ bandwidth }}'"
...
