- name: Configurar BGP en el dispositivo Arista CDLV
  hosts: all
  gather_facts: no

  vars:
    vrf_name: ""   
    bgp_asn: ""
    neighbor_ip: ""           
    router_id: "" 
    network: ""               
    filtro_in_bgp: ""         

  tasks:
    - name: Asignar bgp_asn en base a la encuesta ansible
      set_fact:
        bgp_asn: >-
          {% if bgp_asn in ['AMU-P5-E4-UR29-BLEAF-A', 'AMU-P5-E3-UR29-BLEAF-B'] %}
            65021
          {% elif bgp_asn in ['CDLV-212-G31-UR29-BLEAF-A', 'CDLV-212-G32-UR29-BLEAF-B'] %}
            65121
          {% else %}
            valor_inicial
          {% endif %}
          
        neighbor_ip: >-
          {% if vars['bgp_asn'] == 'AMU-P5-E4-UR29-BLEAF-A' %}
            169.254.196.9
          {% elif vars['bgp_asn'] == 'AMU-P5-E3-UR29-BLEAF-B' %}
            169.254.196.13
          {% elif vars['bgp_asn'] == 'CDLV-212-G31-UR29-BLEAF-A' %}
            169.254.196.17
          {% elif vars['bgp_asn'] == 'CDLV-212-G32-UR29-BLEAF-B' %}
            169.254.196.21
          {% else %}
            valor_inicial
          {% endif %}

        router_id: >-
          {% if vars['bgp_asn'] == 'AMU-P5-E4-UR29-BLEAF-A' %}
            169.254.196.9
          {% elif vars['bgp_asn'] == 'AMU-P5-E3-UR29-BLEAF-B' %}
            169.254.196.13
          {% elif vars['bgp_asn'] == 'CDLV-212-G31-UR29-BLEAF-A' %}
            169.254.196.17
          {% elif vars['bgp_asn'] == 'CDLV-212-G32-UR29-BLEAF-B' %}
            169.254.196.21
          {% else %}
            valor_inicial
          {% endif %}

    - name: Debug Asignar bgp_asn y neighbor_ip
      debug:
        msg: 
          - "ASN BGP asignado: {{ bgp_asn }}"
          - "IP del vecino BGP asignada: {{ neighbor_ip }}"
          - "IP del ID BGP asignada: {{ router_id }}"

    - name: Verificar existencia de la VRF
      arista.eos.eos_command:
        commands:
          - show vrf
      register: vrf_config

    - name: Debug Verificar existencia de la VRF
      debug:
        msg: "Resultado de la verificaci贸n de la VRF: {{ vrf_config.stdout }}"

    - name: Verificar existencia de la prefix-list
      arista.eos.eos_command:
        commands:
          - show running-config section ip prefix-list
      register: prefix_list_config

    - name: Debug Verificar existencia de la prefix-list
      debug:
        msg: "Resultado de la verificaci贸n de la prefix-list: {{ prefix_list_config.stdout }}"

    - name: Validar si la VRF existe
      set_fact:
        vrf_exists: "{{ vrf_name in vrf_config.stdout[0] }}"

    - name: Debug Validar si la VRF existe
      debug:
        msg: "La VRF '{{ vrf_name }}' existe: {{ vrf_exists }}"

    - name: Validar si la prefix-list existe
      set_fact:
        prefix_list_exists: "{{ ('ip prefix-list ' ~ filtro_in_bgp) in prefix_list_config.stdout[0] }}"

    - name: Debug Validar si la prefix-list existe
      debug:
        msg: "El prefix-list '{{ filtro_in_bgp }}' existe: {{ prefix_list_exists }}"

    - name: Configurar BGP solo si existen la VRF y la prefix-list
      arista.eos.eos_config:
        lines:
          - router bgp {{ bgp_asn }}
          - bgp log-neighbor-changes
          - vrf {{ vrf_name }}
          - router-id {{ router_id }}
          - neighbor {{ neighbor_ip }} remote-as 27651
          - network {{ network }}
          - address-family ipv4
          - neighbor {{ neighbor_ip }} prefix-list {{ filtro_in_bgp }} in
      register: bgp_config_result
      when: vrf_exists and prefix_list_exists
      changed_when: true

    - name: Debug Configurar BGP
      debug:
        msg: "Resultado de la configuraci贸n de BGP: {{ bgp_config_result }}"
      when: vrf_exists and prefix_list_exists

    - name: Guardar cambios
      arista.eos.eos_command:
        commands:
          - write memory
      when: vrf_exists and prefix_list_exists

    - name: Debug Guardar cambios
      debug:
        msg: "Cambios guardados en la configuraci贸n."
      when: vrf_exists and prefix_list_exists
