- name: eliminar vlan svi-vrrp y rutas
  hosts: all
  gather_facts: no

  vars:
    site: ""
    vlan_id: ""

  tasks:

    - name: Verificar existencia de la VLAN 
      arista.eos.eos_command:
        commands:
          - show vlan id {{ vlan_id }}
      register: vlan_check

    - name: Debug VLAN check
      debug:
        var: vlan_check.stdout

    - name: Verificar existencia de VRRP
      arista.eos.eos_command:
        commands:
          - show vrrp group 100 interface vlan {{ vlan_id }}
      register: vrrp_check

    - name: Debug VRRP check
      debug:
        var: vrrp_check.stdout

    - name: Extraer la IP VIP de VRRP
      set_fact:
        vrrp_ip: "{{ (vrrp_check.stdout[0] | regex_search('Virtual IPv4 address is (\\d+\\.\\d+\\.\\d+\\.\\d+)', '\\1')) | first }}"
      when: vrrp_check.stdout is not none and vrrp_check.stdout[0] != ''

    - name: Debug IP VIP de VRRP
      debug:
        var: vrrp_ip

    - name: Convertir la IP VIP VRRP a entero y sumar 1
      set_fact:
        vrrp_ip_int: "{{ (vrrp_ip | ansible.utils.ipaddr('int') + 1) | ansible.utils.ipaddr('ipv4') | regex_replace('/32$', '') }}"

    - name: Mostrar IP GW de TDS
      debug:
        msg: "La ip GW de TDS es {{ vrrp_ip_int }}"

    - name: Obtener la configuración completa de las rutas estáticas
      arista.eos.eos_command:
        commands: "show running-config | include {{ vrrp_ip_int }}"
      register: static_routes_output

    - name: Debug rutas estáticas
      debug:
        var: static_routes_output.stdout

    - name: Generar comandos para eliminar rutas estáticas
      set_fact:
        delete_static_routes: "{{ static_routes_output.stdout[0].split('\n') | select('search', '10.136.0.4') | map('regex_replace', '^ip route (.+)$', 'no ip route \\1') | list }}"

    - name: Ejecutar los comandos para eliminar las rutas estáticas
      arista.eos.eos_command:
        commands: "{{ delete_static_routes }}"


    - name: Eliminar rutas estáticas individualmente
      arista.eos.eos_command:
        commands: "{{ item }}"
      loop: "{{ delete_static_routes }}"
      when: 
        - delete_static_routes | length > 0
        - site == 'CDLV' 
        - inventory_hostname == 'CDLV-212-G31-UR29-BLEAF-A'
        - "'not found' not in vlan_check.stdout[0]"
        - vrrp_check.stdout[0] != ''
        

    - name: Configurar VRRP y Ruta Estatica Publica en CDLV-212-G31-UR29-BLEAF-A
      arista.eos.eos_command:
        commands:
          - configure terminal
          - no interface vlan {{ vlan_id }}
          - no vlan {{ vlan_id }}
      when: 
        - site == 'CDLV' 
        - inventory_hostname == 'CDLV-212-G31-UR29-BLEAF-A'
        - "'not found' not in vlan_check.stdout[0]"
        - vrrp_check.stdout[0] != ''
      changed_when: true



    - name: Guardar cambios
      arista.eos.eos_command:
        commands:
          - write memory
