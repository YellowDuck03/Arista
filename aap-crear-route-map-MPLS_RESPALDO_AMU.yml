---
- name: Crear route-map MPLS_RESPALDO_AMU
  hosts: all
  gather_facts: no

  vars:
    route_map_name: "MPLS-RESPALDO-AMSA_SRV_AMU"
    bgp_as_number: "65021"
    vrf_name: ""
    neighbor_ip: ""
    as_path_prepend: "{{ bgp_as_number }}"  # Asegura que as_path_prepend sea igual a bgp_as_number

  tasks:
    - name: Verificar existencia del route-map
      arista.eos.eos_command:
        commands:
          - show running-config section route-map
      register: route_map_config

    - name: Debug Verificar existencia del route-map
      debug:
        msg: "{{ route_map_config.stdout }}"

    - name: Verificar si el route-map ya está configurado
      set_fact:
        route_map_exists: "{{ ('route-map ' ~ route_map_name) in route_map_config.stdout[0] }}"

    - name: Verificar existencia de la VRF
      arista.eos.eos_command:
        commands:
          - show vrf
      register: vrf_config

    - name: Debug Verificar existencia de la VRF
      debug:
        msg: "{{ vrf_config.stdout }}"

    - name: Verificar si la VRF existe
      set_fact:
        vrf_exists: "{{ vrf_name in vrf_config.stdout[0] }}"

    - name: Configurar route-map solo si no existe y si la VRF existe
      arista.eos.eos_command:
        commands:
          - configure terminal
          - route-map {{ route_map_name }} permit 10
          - set as-path prepend {{ as_path_prepend }}
      register: route_map_config_result
      changed_when: "'Invalid input' not in route_map_config_result.stdout"
      when: not route_map_exists and vrf_exists

    - name: Debug Configurar route-map
      debug:
        msg: "Resultado de la configuración del route-map: {{ route_map_config_result }}"
      when: not route_map_exists and vrf_exists

    - name: Configurar BGP solo si la VRF existe y el route-map no existe
      arista.eos.eos_command:
        commands:
          - configure terminal
          - router bgp {{ bgp_as_number }}
          - vrf {{ vrf_name }}
          - neighbor {{ neighbor_ip }} route-map {{ route_map_name }} out
      register: bgp_config
      changed_when: "bgp_config.stdout is defined and 'Invalid input' not in bgp_config.stdout"
      when: vrf_exists and not route_map_exists
      failed_when: "bgp_config.stdout is not defined or 'Invalid input' in bgp_config.stdout"

    - name: Debug Configurar BGP
      debug:
        msg: "Resultado de la configuración de BGP: {{ bgp_config }}"
      when: vrf_exists and not route_map_exists

    - name: Guardar cambios
      arista.eos.eos_command:
        commands:
          - write memory
      register: save_config

    - name: Debug Guardar cambios
      debug:
        msg: "Resultado de guardar cambios: {{ save_config }}"
